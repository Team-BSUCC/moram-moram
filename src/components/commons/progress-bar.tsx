'use client';

import { cva, type VariantProps } from 'class-variance-authority';
import { twMerge } from 'tailwind-merge';

const wrapperVariants = cva(
  'flex items-center w-full text-black transition-all',
  {
    variants: {
      size: {
        default:
          'text-[14px] leading-[20px] font-normal sm:text-[16px] sm:leading-[24px] md:text-[20px] md:leading-[30px]',
      },
    },
    defaultVariants: {
      size: 'default',
    },
  }
);

const barVariants = cva(
  'rounded-full h-full place-item-center border border-lightgray bg-green-400',
  {
    variants: {
      height: {
        default: '',
      },
    },
    defaultVariants: {
      height: 'default',
    },
  }
);

type LinearProgressProps = VariantProps<typeof wrapperVariants> &
  VariantProps<typeof barVariants> & {
    value: number;
  };

/**
 * 직선 프로그래스바 공통 컴포넌트
 * @param value - 진행률 (%)
 * @param size - 텍스트 크기
 * @param height - 바 높이
 * @returns - 직선 프로그래스바
 */
const LinearProgress = ({ value, size, height }: LinearProgressProps) => {
  const progressLevelToSVG = (value: number): JSX.Element => {
    if (value < 30) return seedSvg;
    if (value < 60) return sproutSvg;
    if (value < 100) return flowerBudSvg;
    return flowerSvg;
  };

  const progressLevelToSentence = (value: number): React.ReactNode => {
    if (value < 30)
      return (
        <span className='flex place-items-center gap-[2px] md:gap-[4px]'>
          이제 막 시작했어요. 차근차근 한 칸씩 채워봐요 :)
        </span>
      );
    if (value < 60)
      return (
        <span className='flex place-items-center gap-[2px] md:gap-[4px]'>
          총
          {
            <span className='text-[20px] font-semibold leading-[30px] sm:text-[24px] sm:leading-[36px] md:text-[28px] md:leading-[42px]'>
              {value}%
            </span>
          }
          {/* 공통 사이즈에서 보이는 내용 */}
          <span className='hidden md:inline'>
            완성! 조금씩 자라고 있어요, 매일의 실천은 큰 힘이 돼요 💪
          </span>
          {/* 모바일 사이즈에서 보이는 내용 */}
          <span className='block md:hidden'>
            완성! 매일의 실천은 큰 힘이 돼요 💪
          </span>
        </span>
      );
    if (value < 100)
      return (
        <span className='flex place-items-center gap-[2px] md:gap-[4px]'>
          총
          {
            <span className='text-[20px] font-semibold leading-[30px] sm:text-[24px] sm:leading-[36px] md:text-[28px] md:leading-[42px]'>
              {value}%
            </span>
          }
          {/* 공통 사이즈에서 보이는 내용 */}
          <span className='hidden md:inline'>
            완성! 눈에 띄게 성장 중이에요! 목표가 점점 가까워지고 있어요 :)
          </span>
          {/* 모바일 사이즈에서 보이는 내용 */}
          <span className='block md:hidden'>
            완성! 눈에 띄게 성장 중이에요! :)
          </span>
        </span>
      );
    return (
      <span className='flex place-items-center gap-[4px] text-[16px] font-normal leading-[24px] sm:text-[18px] sm:leading-[27px] md:text-[20px] md:leading-[30px]'>
        총
        {
          <span className='text-[20px] font-semibold leading-[30px] sm:text-[24px] sm:leading-[36px] md:text-[28px] md:leading-[42px]'>
            100%
          </span>
        }
        {/* 공통 사이즈에서 보이는 내용 */}
        <span className='hidden md:inline'>
          완성! 멋지게 해냈어요! 당신의 노력이 꽃을 피웠어요 🎉🌸
        </span>
        {/* 모바일 사이즈에서 보이는 내용 */}
        <span className='block md:hidden'>완성! 멋지게 해냈어요!</span>
      </span>
    );
  };

  const progressLevelToColor = (value: number): string => {
    if (value < 30) return 'bg-beige';
    if (value < 60) return 'bg-secondary';
    if (value < 100) return 'bg-pink-pigment';
    return 'bg-red-pigment';
  };

  return (
    <div className={twMerge(wrapperVariants({ size }), 'flex-col')}>
      {/* 텍스트 영역 */}
      <div className='flex place-items-center place-self-start'>
        {progressLevelToSVG(value)}
        <span className='whitespace-nowrap'>
          {progressLevelToSentence(value)}
        </span>
      </div>
      {/* 진행바 */}
      <div
        className={twMerge(
          'h-[24px] w-full overflow-hidden rounded-full border-[2px] border-lightgray bg-white md:h-[32px]'
        )}
      >
        <div
          className={twMerge(
            barVariants({ height }),
            `${progressLevelToColor(value)}`
          )}
          style={{ width: `${value}%` }}
        />
      </div>
    </div>
  );
};

const seedSvg = (
  <>
    {/* 공통 사이즈에서 보이는 내용 */}
    <svg
      className='hidden md:inline'
      width='80'
      height='65'
      viewBox='0 0 80 65'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M48.8023 49.84C39.3989 42.4932 34.7883 21.3064 42.7406 14.562C51.354 9.9717 70.0954 22.5349 73.0235 33.6469C75.9515 44.7588 58.2057 57.1869 48.8023 49.84Z'
        fill='#C6906A'
        stroke='#202020'
        strokeWidth='2.58982'
      />
      <circle cx='48.7682' cy='41.1012' r='1.35124' fill='#202020' />
      <path
        d='M56.5677 44.9989C54.3258 45.9511 52.9187 43.8108 51.8726 43.533C50.3493 43.1284 50.1956 44.8554 51.89 45.9684C55.2782 48.1934 57.3317 47.1177 58.2615 46.112C59.2646 45.0272 57.8742 44.24 56.5677 44.9989Z'
        fill='#202020'
      />
      <path
        d='M24.9516 56.1411C32.1218 50.5391 35.6373 34.3841 29.5737 29.2415C23.0059 25.7414 8.71555 35.3209 6.48294 43.7937C4.25032 52.2666 17.7815 61.7431 24.9516 56.1411Z'
        fill='#C6906A'
        stroke='#202020'
        strokeWidth='2.28851'
      />
      <ellipse
        cx='1.19403'
        cy='0.597015'
        rx='1.19403'
        ry='0.597015'
        transform='matrix(-0.944509 0.328485 0.328485 0.944509 26.0059 48.5977)'
        fill='#202020'
      />
      <path
        d='M19.0306 52.4483C20.74 53.1744 21.813 51.5424 22.6107 51.3305C23.7721 51.022 23.8893 52.3389 22.5974 53.1876C20.0139 54.8841 18.4481 54.0639 17.7391 53.297C16.9742 52.4698 18.0344 51.8697 19.0306 52.4483Z'
        fill='#202020'
      />
    </svg>
    {/* 모바일 사이즈에서 보이는 내용 */}
    <svg
      className='block md:hidden'
      width='40'
      height='33'
      viewBox='0 0 40 33'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M24.4016 24.9239C19.6999 21.2505 17.3947 10.6571 21.3708 7.28492C25.6775 4.98976 35.0482 11.2714 36.5122 16.8273C37.9762 22.3833 29.1033 28.5973 24.4016 24.9239Z'
        fill='#C6906A'
        stroke='#202020'
        strokeWidth='1.29491'
      />
      <circle cx='24.3846' cy='20.5506' r='0.67562' fill='#202020' />
      <path
        d='M28.2843 22.4955C27.1634 22.9717 26.4598 21.9015 25.9368 21.7626C25.1752 21.5603 25.0983 22.4238 25.9455 22.9803C27.6396 24.0928 28.6663 23.5549 29.1312 23.0521C29.6328 22.5097 28.9376 22.1161 28.2843 22.4955Z'
        fill='#202020'
      />
      <path
        d='M12.4758 28.0705C16.0609 25.2695 17.8186 17.192 14.7869 14.6208C11.503 12.8707 4.35778 17.6604 3.24147 21.8969C2.12516 26.1333 8.89075 30.8715 12.4758 28.0705Z'
        fill='#C6906A'
        stroke='#202020'
        strokeWidth='1.14426'
      />
      <ellipse
        cx='0.597015'
        cy='0.298507'
        rx='0.597015'
        ry='0.298507'
        transform='matrix(-0.944509 0.328485 0.328485 0.944509 13.0029 24.2969)'
        fill='#202020'
      />
      <path
        d='M9.51581 26.2202C10.3705 26.5833 10.907 25.7673 11.3058 25.6613C11.8866 25.5071 11.9452 26.1655 11.2992 26.5899C10.0074 27.4381 9.22453 27.028 8.87003 26.6446C8.48758 26.231 9.01767 25.9309 9.51581 26.2202Z'
        fill='#202020'
      />
    </svg>
  </>
);

const sproutSvg = (
  <>
    {/* 공통 사이즈에서 보이는 내용 */}
    <svg
      className='hidden md:inline'
      width='80'
      height='66'
      viewBox='0 0 80 66'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M17.5335 19.633C39.5047 22.1534 44.9975 32.235 44.9975 36.9607C44.9975 19.066 60.8325 13.3513 68.75 13.7713C68.75 30.1539 52.915 36.7507 44.9975 36.9607C21.8386 38.725 17.0386 26.144 17.5335 19.633Z'
        fill='#4CB446'
      />
      <path
        d='M41.2861 65C42.7706 60.5893 45.5913 48.8065 44.9975 36.9607M44.9975 36.9607C44.9975 32.235 39.5047 22.1534 17.5335 19.633C17.0386 26.144 21.8386 38.725 44.9975 36.9607ZM44.9975 36.9607C52.915 36.7507 68.75 30.1539 68.75 13.7713C60.8325 13.3513 44.9975 19.066 44.9975 36.9607Z'
        stroke='#202020'
        strokeWidth='2.5'
        strokeLinejoin='round'
      />
    </svg>
    {/* 모바일 사이즈에서 보이는 내용 */}
    <svg
      className='block md:hidden'
      width='40'
      height='34'
      viewBox='0 0 40 34'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M8.76673 10.3165C19.7523 11.5767 22.4987 16.6175 22.4987 18.9803C22.4987 10.033 30.4162 7.17564 34.375 7.38567C34.375 15.5769 26.4575 18.8753 22.4987 18.9803C10.9193 19.8625 8.5193 13.572 8.76673 10.3165Z'
        fill='#4CB446'
      />
      <path
        d='M20.6431 33C21.3853 30.7947 22.7956 24.9033 22.4987 18.9803M22.4987 18.9803C22.4987 16.6175 19.7523 11.5767 8.76673 10.3165C8.5193 13.572 10.9193 19.8625 22.4987 18.9803ZM22.4987 18.9803C26.4575 18.8753 34.375 15.5769 34.375 7.38567C30.4162 7.17564 22.4987 10.033 22.4987 18.9803Z'
        stroke='#202020'
        strokeWidth='1.25'
        strokeLinejoin='round'
      />
    </svg>
  </>
);

const flowerBudSvg = (
  <>
    {/* 공통 사이즈에서 보이는 내용 */}
    <svg
      className='hidden md:inline'
      width='80'
      height='66'
      viewBox='0 0 80 66'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M51.7593 4.59599C59.9053 18.9779 52.106 47.9109 34.9477 40.8046C34.2077 40.2848 33.331 40.2294 32.7661 39.2818C25.8673 36.2926 18.1359 22.7003 45.8666 3.75L46.7273 9.16436C48.2609 7.69207 49.9348 6.16938 51.7593 4.59599Z'
        fill='#F6B2BB'
      />
      <path
        d='M33.561 65C32.6909 63.8455 31.7224 61.8111 31.2289 59.078M34.9477 40.8046C52.106 47.9109 59.9053 18.9779 51.7593 4.59599C49.9348 6.16938 48.2609 7.69207 46.7273 9.16436M34.9477 40.8046C34.2077 40.2848 33.331 40.2294 32.7661 39.2818M34.9477 40.8046C31.0329 47.9496 30.4445 54.7345 31.2289 59.078M32.7661 39.2818C25.8673 36.2926 18.1359 22.7003 45.8666 3.75L46.7273 9.16436M32.7661 39.2818C29.9785 34.606 30.5595 24.6856 46.7273 9.16436M31.2289 59.078C33.4506 55.8069 39.1071 49.5352 43.96 50.6181'
        stroke='#202020'
        strokeWidth='2.5'
        strokeLinejoin='round'
      />
    </svg>
    {/* 모바일 사이즈에서 보이는 내용 */}
    <svg
      className='block md:hidden'
      width='40'
      height='33'
      viewBox='0 0 40 33'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M25.8797 2.298C29.9527 9.48895 26.053 23.9555 17.4738 20.4023C17.1039 20.1424 16.6655 20.1147 16.383 19.6409C12.9336 18.1463 9.06797 11.3501 22.9333 1.875L23.3637 4.58218C24.1305 3.84604 24.9674 3.08469 25.8797 2.298Z'
        fill='#F6B2BB'
      />
      <path
        d='M16.7805 32.5C16.3454 31.9228 15.8612 30.9056 15.6144 29.539M17.4738 20.4023C26.053 23.9555 29.9527 9.48895 25.8797 2.298C24.9674 3.08469 24.1305 3.84604 23.3637 4.58218M17.4738 20.4023C17.1039 20.1424 16.6655 20.1147 16.383 19.6409M17.4738 20.4023C15.5164 23.9748 15.2223 27.3673 15.6144 29.539M16.383 19.6409C12.9336 18.1463 9.06797 11.3501 22.9333 1.875L23.3637 4.58218M16.383 19.6409C14.9893 17.303 15.2797 12.3428 23.3637 4.58218M15.6144 29.539C16.7253 27.9034 19.5536 24.7676 21.98 25.309'
        stroke='#202020'
        strokeWidth='1.25'
        strokeLinejoin='round'
      />
    </svg>
  </>
);

const flowerSvg = (
  <>
    {/* 공통 사이즈에서 보이는 내용 */}
    <svg
      className='hidden md:inline'
      width='80'
      height='68'
      viewBox='0 0 80 68'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M42.511 39.4623C43.7949 39.8291 46.9131 39.5723 49.1142 35.6104C52.0489 35.2436 57.6983 33.1893 56.8179 27.9067C68.5567 25.1554 65.2551 17.4503 61.2203 17.4505C64.1546 8.97736 56.2679 10.6639 51.8658 13.0484C55.9006 2.37418 48.0139 2.77711 44.1621 4.79492C36.2383 -2.68869 32.7895 6.7763 34.2573 10.8486C27.8375 0.173049 22.7016 7.7304 22.1512 11.9491C10.2655 14.5904 17.9327 22.7339 22.7015 23.5047C14.9978 24.6052 16.8322 29.3371 19.9502 31.2084C20.7768 31.7045 21.5532 32.0358 22.1546 32.2924C22.6854 32.5189 23.0797 32.6872 23.2517 32.8592C25.0861 39.4623 33.8902 34.8768 35.3576 32.3089C35.7978 38.0317 40.3099 39.4623 42.511 39.4623ZM41.9607 25.1554C40.9992 25.8422 39.1941 26.673 37.9784 25.9376C37.7691 25.811 37.5772 25.6379 37.4101 25.4097C37.2519 25.1935 37.1159 24.9278 37.0083 24.6051C36.6058 23.3975 37.3075 22.7053 38.3056 22.4744C39.487 22.2012 41.0836 22.5744 41.7564 23.5047C42.0693 23.9374 42.1823 24.4906 41.9607 25.1554Z'
        fill='#F99695'
      />
      <path
        d='M37.0083 66.4253C37.7526 65.4742 38.6199 64.1634 39.4766 62.5722M42.511 39.4623C43.7949 39.8291 46.9131 39.5723 49.1142 35.6104C52.0489 35.2436 57.6983 33.1893 56.8179 27.9067M42.511 39.4623C40.3099 39.4623 35.7978 38.0317 35.3576 32.3089M42.511 39.4623C44.0457 44.45 43.8248 49.4098 42.8138 53.768M56.8179 27.9067C52.2323 27.3564 42.8412 26.0358 41.9607 25.1554M56.8179 27.9067C68.5567 25.1554 65.2551 17.4503 61.2203 17.4505C64.1546 8.97736 56.2679 10.6639 51.8658 13.0484M41.9607 25.1554C40.9992 25.8422 39.1941 26.673 37.9784 25.9376M41.9607 25.1554C42.1823 24.4906 42.0693 23.9374 41.7564 23.5047M35.3576 32.3089C35.8208 30.6293 36.9935 27.0035 37.9784 25.9376M35.3576 32.3089C33.8902 34.8768 25.0861 39.4623 23.2517 32.8592C23.0797 32.6872 22.6854 32.5189 22.1546 32.2924C21.5532 32.0358 20.7768 31.7045 19.9502 31.2084C16.8322 29.3371 14.9978 24.6052 22.7015 23.5047M37.9784 25.9376C37.7691 25.811 37.5772 25.6379 37.4101 25.4097M22.7015 23.5047C28.8644 22.6242 35.0752 24.4078 37.4101 25.4097M22.7015 23.5047C17.9327 22.7339 10.2655 14.5904 22.1512 11.9491C22.7016 7.7304 27.8375 0.173049 34.2573 10.8486M37.4101 25.4097C37.2519 25.1935 37.1159 24.9278 37.0083 24.6051C36.6058 23.3975 37.3075 22.7053 38.3056 22.4744M34.2573 10.8486C35.3054 12.363 37.5824 16.8085 38.3056 22.4744M34.2573 10.8486C32.7895 6.7763 36.2383 -2.68869 44.1621 4.79492C48.0139 2.77711 55.9006 2.37418 51.8658 13.0484M38.3056 22.4744C39.487 22.2012 41.0836 22.5744 41.7564 23.5047M51.8658 13.0484C50.9957 14.8834 47.7556 19.5437 41.7564 23.5047M42.8138 53.768C44.3638 48.8164 50.105 39.023 60.67 39.4623C59.3059 41.6191 57.6551 44.3704 56.8179 46.6146C54.8042 52.0122 47.2001 56.4762 42.3134 55.6707M42.8138 53.768C42.6634 54.4162 42.4956 55.0511 42.3134 55.6707M42.3134 55.6707C41.5434 58.2903 40.5179 60.6384 39.4766 62.5722M39.4766 62.5722C39.6338 60.6042 39.5741 58.1824 39.1449 55.6707M39.1449 55.6707C37.8143 47.8826 32.9317 39.2302 19.9502 40.5616C20.1497 40.9607 20.3458 41.403 20.5545 41.8736C21.8806 44.8642 23.7132 48.997 30.1419 50.4233C36.4296 51.8184 37.9796 53.7216 39.1449 55.6707Z'
        stroke='black'
        strokeWidth='2.5'
        strokeLinejoin='round'
      />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M43.555 25.2587C41.9318 26.3773 38.8847 27.7304 36.8325 26.5326C36.4791 26.3264 36.1553 26.0445 35.8733 25.6728C35.6061 25.3207 35.3765 24.888 35.195 24.3625C34.5155 22.3959 35.7 21.2684 37.3849 20.8925C39.3791 20.4475 42.0744 21.0553 43.21 22.5703C43.7383 23.275 43.9291 24.176 43.555 25.2587Z'
        fill='#EDDF12'
        stroke='black'
        strokeWidth='2.5'
        strokeLinejoin='round'
      />
      <path
        d='M43.1009 53.738C44.6509 48.7864 50.3921 38.993 60.9572 39.4323C59.5931 41.5891 57.9423 44.3404 57.105 46.5846C55.0914 51.9822 47.4872 56.4462 42.6006 55.6407C41.8306 58.2603 40.805 60.6083 39.7638 62.5422C39.921 60.5742 39.8612 58.1524 39.4321 55.6407C38.2668 53.6916 36.7168 51.7884 30.429 50.3933C24.0003 48.967 22.1677 44.8342 20.8417 41.8436L20.8416 41.8436C20.633 41.373 20.4368 40.9307 20.2373 40.5316C33.2188 39.2002 38.1014 47.8526 39.4321 55.6407C39.8612 58.1524 39.921 60.5742 39.7638 62.5422C40.805 60.6083 41.8306 58.2603 42.6006 55.6407C42.7827 55.021 42.9506 54.3862 43.1009 53.738Z'
        fill='#AAD676'
      />
      <path
        d='M37.2955 66.3952C38.0398 65.4442 38.9071 64.1334 39.7638 62.5422M42.6006 55.6407C42.7827 55.021 42.9506 54.3862 43.1009 53.738C44.6509 48.7864 50.3921 38.993 60.9572 39.4323C59.5931 41.5891 57.9423 44.3404 57.105 46.5846C55.0914 51.9822 47.4872 56.4462 42.6006 55.6407ZM42.6006 55.6407C41.8306 58.2603 40.805 60.6083 39.7638 62.5422M39.7638 62.5422C39.921 60.5742 39.8612 58.1524 39.4321 55.6407M39.4321 55.6407C38.1014 47.8526 33.2188 39.2002 20.2373 40.5316C20.4368 40.9307 20.633 41.373 20.8417 41.8436C22.1677 44.8342 24.0003 48.967 30.429 50.3933C36.7168 51.7884 38.2668 53.6916 39.4321 55.6407Z'
        stroke='black'
        strokeWidth='2.5'
        strokeLinejoin='round'
      />
    </svg>
    {/* 모바일 사이즈에서 보이는 내용 */}
    <svg
      className='block md:hidden'
      width='40'
      height='35'
      viewBox='0 0 40 35'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M21.255 20.2311C21.897 20.4146 23.4561 20.2862 24.5566 18.3052C26.024 18.1218 28.8487 17.0946 28.4085 14.4534C34.2779 13.0777 32.6271 9.22517 30.6097 9.22526C32.0768 4.98868 28.1335 5.83195 25.9324 7.0242C27.9498 1.68709 24.0065 1.88856 22.0806 2.89746C18.1186 -0.844344 16.3942 3.88815 17.1282 5.92428C13.9182 0.586524 11.3503 4.3652 11.0751 6.47455C5.13226 7.79519 8.96586 11.867 11.3502 12.2523C7.49839 12.8026 8.41559 15.1685 9.97459 16.1042C10.3879 16.3522 10.7761 16.5179 11.0768 16.6462C11.3422 16.7595 11.5394 16.8436 11.6254 16.9296C12.5426 20.2311 16.9446 17.9384 17.6783 16.6545C17.8984 19.5159 20.1545 20.2312 21.255 20.2311ZM20.9799 13.0777C20.4991 13.4211 19.5965 13.8365 18.9887 13.4688C18.884 13.4055 18.7881 13.319 18.7046 13.2048C18.6255 13.0967 18.5575 12.9639 18.5037 12.8026C18.3024 12.1988 18.6533 11.8526 19.1523 11.7372C19.743 11.6006 20.5413 11.7872 20.8777 12.2523C21.0342 12.4687 21.0907 12.7453 20.9799 13.0777Z'
        fill='#F99695'
      />
      <path
        d='M18.5037 33.7126C18.8758 33.2371 19.3095 32.5817 19.7378 31.7861M21.255 20.2311C21.897 20.4146 23.4561 20.2862 24.5566 18.3052C26.024 18.1218 28.8487 17.0946 28.4085 14.4534M21.255 20.2311C20.1545 20.2312 17.8984 19.5159 17.6783 16.6545M21.255 20.2311C22.0223 22.725 21.9119 25.2049 21.4064 27.384M28.4085 14.4534C26.1157 14.1782 21.4201 13.5179 20.9799 13.0777M28.4085 14.4534C34.2779 13.0777 32.6271 9.22517 30.6097 9.22526C32.0768 4.98868 28.1335 5.83195 25.9324 7.0242M20.9799 13.0777C20.4991 13.4211 19.5965 13.8365 18.9887 13.4688M20.9799 13.0777C21.0907 12.7453 21.0342 12.4687 20.8777 12.2523M17.6783 16.6545C17.9099 15.8146 18.4963 14.0018 18.9887 13.4688M17.6783 16.6545C16.9446 17.9384 12.5426 20.2311 11.6254 16.9296C11.5394 16.8436 11.3422 16.7595 11.0768 16.6462C10.7761 16.5179 10.3879 16.3522 9.97459 16.1042C8.41559 15.1685 7.49839 12.8026 11.3502 12.2523M18.9887 13.4688C18.884 13.4055 18.7881 13.319 18.7046 13.2048M11.3502 12.2523C14.4317 11.8121 17.5371 12.7039 18.7046 13.2048M11.3502 12.2523C8.96586 11.867 5.13226 7.79519 11.0751 6.47455C11.3503 4.3652 13.9182 0.586524 17.1282 5.92428M18.7046 13.2048C18.6255 13.0967 18.5575 12.9639 18.5037 12.8026C18.3024 12.1988 18.6533 11.8526 19.1523 11.7372M17.1282 5.92428C17.6522 6.68152 18.7907 8.90423 19.1523 11.7372M17.1282 5.92428C16.3942 3.88815 18.1186 -0.844344 22.0806 2.89746C24.0065 1.88856 27.9498 1.68709 25.9324 7.0242M19.1523 11.7372C19.743 11.6006 20.5413 11.7872 20.8777 12.2523M25.9324 7.0242C25.4973 7.94172 23.8773 10.2719 20.8777 12.2523M21.4064 27.384C22.1814 24.9082 25.052 20.0115 30.3345 20.2311C29.6525 21.3095 28.8271 22.6852 28.4085 23.8073C27.4016 26.5061 23.5995 28.7381 21.1562 28.3354M21.4064 27.384C21.3312 27.7081 21.2473 28.0255 21.1562 28.3354M21.1562 28.3354C20.7712 29.6452 20.2584 30.8192 19.7378 31.7861M19.7378 31.7861C19.8164 30.8021 19.7866 29.5912 19.572 28.3354M19.572 28.3354C18.9066 24.4413 16.4654 20.1151 9.97459 20.7808C10.0744 20.9803 10.1724 21.2015 10.2768 21.4368C10.9398 22.9321 11.8561 24.9985 15.0704 25.7117C18.2143 26.4092 18.9893 27.3608 19.572 28.3354Z'
        stroke='black'
        strokeWidth='1.25'
        strokeLinejoin='round'
      />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M21.7775 13.1294C20.9659 13.6886 19.4423 14.3652 18.4162 13.7663C18.2396 13.6632 18.0776 13.5223 17.9366 13.3364C17.8031 13.1604 17.6883 12.944 17.5975 12.6813C17.2577 11.6979 17.85 11.1342 18.6925 10.9462C19.6896 10.7238 21.0372 11.0276 21.605 11.7852C21.8691 12.1375 21.9645 12.588 21.7775 13.1294Z'
        fill='#EDDF12'
        stroke='black'
        strokeWidth='1.25'
        strokeLinejoin='round'
      />
      <path
        d='M21.55 27.371C22.325 24.8951 25.1956 19.9984 30.4781 20.2181C29.796 21.2965 28.9706 22.6722 28.552 23.7942C27.5452 26.493 23.7431 28.7251 21.2998 28.3223C20.9148 29.6321 20.402 30.8061 19.8814 31.7731C19.96 30.789 19.9301 29.5782 19.7156 28.3223C19.1329 27.3478 18.3579 26.3961 15.214 25.6986C11.9997 24.9854 11.0834 22.919 10.4203 21.4238L10.4203 21.4238C10.316 21.1884 10.2179 20.9673 10.1182 20.7678C16.6089 20.102 19.0502 24.4282 19.7156 28.3223C19.9301 29.5782 19.96 30.789 19.8814 31.7731C20.402 30.8061 20.9148 29.6321 21.2998 28.3223C21.3909 28.0125 21.4748 27.695 21.55 27.371Z'
        fill='#AAD676'
      />
      <path
        d='M18.6473 33.6996C19.0194 33.2241 19.4531 32.5687 19.8814 31.7731M21.2998 28.3223C21.3909 28.0125 21.4748 27.695 21.55 27.371C22.325 24.8951 25.1956 19.9984 30.4781 20.2181C29.796 21.2965 28.9706 22.6722 28.552 23.7942C27.5452 26.493 23.7431 28.7251 21.2998 28.3223ZM21.2998 28.3223C20.9148 29.6321 20.402 30.8061 19.8814 31.7731M19.8814 31.7731C19.96 30.789 19.9301 29.5782 19.7156 28.3223M19.7156 28.3223C19.0502 24.4282 16.6089 20.102 10.1182 20.7678C10.2179 20.9673 10.316 21.1885 10.4203 21.4238C11.0834 22.919 11.9997 24.9854 15.214 25.6986C18.3579 26.3961 19.1329 27.3478 19.7156 28.3223Z'
        stroke='black'
        strokeWidth='1.25'
        strokeLinejoin='round'
      />
    </svg>
  </>
);

export default LinearProgress;
